package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"
	"dabids/graph/customTypes"
	"fmt"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input customTypes.NewUser) (*customTypes.User, error) {
	panic(fmt.Errorf("not implemented: CreateUser - createUser"))
}

// UpdateUser is the resolver for the updateUser field.
func (r *mutationResolver) UpdateUser(ctx context.Context, input customTypes.UpdateUser) (*customTypes.User, error) {
	panic(fmt.Errorf("not implemented: UpdateUser - updateUser"))
}

// UdpateUserPassword is the resolver for the udpateUserPassword field.
func (r *mutationResolver) UdpateUserPassword(ctx context.Context, input customTypes.PasswordUpdate) (*customTypes.User, error) {
	panic(fmt.Errorf("not implemented: UdpateUserPassword - udpateUserPassword"))
}

// DeleteUser is the resolver for the deleteUser field.
func (r *mutationResolver) DeleteUser(ctx context.Context, userID string) (*customTypes.User, error) {
	panic(fmt.Errorf("not implemented: DeleteUser - deleteUser"))
}

// GetUser is the resolver for the getUser field.
func (r *queryResolver) GetUser(ctx context.Context, userID string) (*customTypes.User, error) {
	panic(fmt.Errorf("not implemented: GetUser - getUser"))
}

// GetUsers is the resolver for the getUsers field.
func (r *queryResolver) GetUsers(ctx context.Context) ([]*customTypes.User, error) {
	panic(fmt.Errorf("not implemented: GetUsers - getUsers"))
}
