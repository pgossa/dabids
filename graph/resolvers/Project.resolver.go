package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"
	"dabids/graph/customTypes"
	"fmt"
)

// CreateProject is the resolver for the createProject field.
func (r *mutationResolver) CreateProject(ctx context.Context, projectName string) (*customTypes.Project, error) {
	panic(fmt.Errorf("not implemented: CreateProject - createProject"))
}

// UpdateProject is the resolver for the updateProject field.
func (r *mutationResolver) UpdateProject(ctx context.Context, input customTypes.ProjectInput) (*customTypes.Project, error) {
	panic(fmt.Errorf("not implemented: UpdateProject - updateProject"))
}

// DeleteProject is the resolver for the deleteProject field.
func (r *mutationResolver) DeleteProject(ctx context.Context, projectID string) (*customTypes.Project, error) {
	panic(fmt.Errorf("not implemented: DeleteProject - deleteProject"))
}

// GetProject is the resolver for the getProject field.
func (r *queryResolver) GetProject(ctx context.Context, projectID string) (*customTypes.Project, error) {
	panic(fmt.Errorf("not implemented: GetProject - getProject"))
}

// GetProjects is the resolver for the getProjects field.
func (r *queryResolver) GetProjects(ctx context.Context) ([]*customTypes.Project, error) {
	panic(fmt.Errorf("not implemented: GetProjects - getProjects"))
}
